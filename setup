#!/usr/bin/env bash

set -e

# Resolve the directory of this script
DEV_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Load function definitions
source "$DEV_DIR/scripts/dev/env.sh"

print_help() {
    cat <<EOF
Usage: setup.sh [ACTION] [OPTIONS] [TYPES...]

Actions:
  list              List all available types
  install [TYPES]   Install packages (all types if none specified)
  run [TYPES]       Run setup scripts (all types if none specified)
  setup [TYPES]     Install and run (all types if none specified)
  help              Show this help message

Options:
  --no-sym          Copy files instead of creating symbolic links
  --dry-run         Show what would be done, but don’t execute
EOF
}

# === Argument Parsing ===
USE_SYMLINK=true
DRY_RUN=false
ACTION=""
TYPES=()

while [[ $# -gt 0 ]]; do
    case "$1" in
        --no-sym)
            USE_SYMLINK=false
            echo "No symlink"
            ;;
        --dry-run)
            DRY_RUN=true
            echo "Dry run"
            ;;
        list|install|run|setup|help)
            ACTION="$1"
            shift
            # Collect all remaining arguments as TYPES until flags are found
            while [[ $# -gt 0 && "$1" != --* ]]; do
                TYPES+=("$1")
                shift
            done
            continue  # Skip normal shift
            ;;
        *)
            echo "Unknown argument: $1"
            print_help
            exit 1
            ;;
    esac
    shift
done

dry_run_args=()
[[ "$DRY_RUN" == true ]] && dry_run_args+=(--dry-run)

# === Handle Actions ===
case "$ACTION" in
    help)

        print_help
        exit 0
        ;;
    list)
        dev_list
        ;;
    install)
        if [[ ${#TYPES[@]} -eq 0 ]]; then
            dev_install_all "${dry_run_args[@]}"
        else
            dev_install "${TYPES[@]}" "${dry_run_args[@]}"
        fi
        ;;
    run)
        if [[ ${#TYPES[@]} -eq 0 ]]; then
            dev_run_all "${dry_run_args[@]}"
        else
            dev_run "${TYPES[@]}" "${dry_run_args[@]}"
        fi
        ;;
    setup)
        if [[ ${#TYPES[@]} -eq 0 ]]; then
            dev_setup_all "${dry_run_args[@]}"
        else
            dev_setup "${TYPES[@]}" "${dry_run_args[@]}"
        fi
        ;;
    "")
        echo "No install/run/setup requested."
        ;;
    *)
        echo "❌ Unknown action: $ACTION"
        print_help
        exit 1
        ;;
esac


# === Always Perform Syncing ===
args=()
[[ "$USE_SYMLINK" == false ]] && args+=(--no-sym)
[[ "$DRY_RUN" == true ]] && args+=(--dry-run)

sync_items "$DEV_CONF_DIR" "$HOME/.config" "${args[@]}"
sync_items "$DEV_HOME_DIR" "$HOME" "${args[@]}"
sync_items "$DEV_ICONS_DIR" "$HOME/.icons" "${args[@]}"

echo "✅ Syncing complete."

echo "✅ All done!"

